## Installation of GitLab

---
    - name: Include OS-specific variables
      include_vars: "{{ ansible_os_family }}.yml"
    
    - name: Check if GitLab configuration file already exists
      stat: path=/etc/gitlab/gitlab.rb
      register: gitlab_config_file
    
    - name: Check if GitLab is already installed
      stat: path=/usr/bin/gitlab-ctl
      register: gitlab_file
    
    # Install GitLab and its dependencies.
    - name: Update GitLab dependencies (Debian)
      command: apt-get update -y
      when: ansible_os_family == 'Debian'
    
    - name: Update GitLab dependencies (CentOS)
      command: yum update -y
      when: ansible_os_family == 'RedHat'
    
    - name: Install GitLab dependencies
      package:
        name: "{{ gitlab_dependencies }}"
        state: present
    
    - name: Install GitLab dependencies (Debian)
      apt:
        name: gnupg2
        state: present
      when: ansible_os_family == 'Debian'
    
    - name: Install GitLab dependencies (CentOS)
      yum:
        name: gnupg2
        state: present
      when: ansible_os_family == 'RedHat'
    
    - name: Download GitLab repository installation script
      get_url:
        url: "{{ gitlab_repository_installation_script_url }}"
        dest: /tmp/gitlab_install_repository.sh
        validate_certs: "{{ gitlab_download_validate_certs }}"
      when: not gitlab_file.stat.exists
    
    - name: Install GitLab repository.
      command: bash /tmp/gitlab_install_repository.sh
      register: output
      when: not gitlab_file.stat.exists
    
    - name: Define the GitLab package name
      set_fact:
        gitlab_package_name: "{{ gitlab_edition }}{{ gitlab_package_version_separator }}{{ gitlab_version }}"
      when: gitlab_version | default(false)
    
    - name: Install GitLab
      package:
        name: "{{ gitlab_package_name | default(gitlab_edition) }}"
        state: present
      async: 300
      poll: 5
      when: not gitlab_file.stat.exists
    
    # Start and configure GitLab. Sometimes the first run fails, but after that,
    # restarts fix problems, so ignore failures on this run.
    - name: Reconfigure GitLab (first run).
      command: >
        gitlab-ctl reconfigure
        creates=/var/opt/gitlab/bootstrapped
      failed_when: false
    
    - name: Create GitLab SSL configuration folder.
      file:
        path: /etc/gitlab/ssl
        state: directory
        owner: root
        group: root
        mode: 0700
    
    - name: Copy GitLab configuration file.
      template:
        src: "{{ gitlab_config_template }}"
        dest: /etc/gitlab/gitlab.rb
        owner: root
        group: root
        mode: 0600
      notify: restart gitlab
    
    - name: Stop GitLab Services.
      command: >
        gitlab-ctl stop
    
    - name: Reconfigure GitLab (second run).
      command: >
        gitlab-ctl reconfigure
    
    - name: Start GitLab Services.
      command: >
        gitlab-ctl start
    
    - name: Restart GitLab Services.
      command: >
        gitlab-ctl restart
    
    - name: Create the pwslab directory if it does not exist
      file:
        path: /pwslab/pwsconfig/nginx/sites-available 
        state: directory
        mode: '0755'